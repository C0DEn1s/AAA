def get_check_option(options: dict):
    option = ''

    while option not in options:
        print('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}'.format(*options))
        option = input().lower()

    return option


def step2_umbrella():
    print('–Ω—É, –æ–Ω –∂–µ –Ω–µ –ø–æ–º–æ–∂–µ—Ç –æ—Ç –¥–æ–∂–¥—è –∏–∑ —É—Ç–æ–∫...\n'
          '–£—Ç–∫–∞-–º–∞—Å—Å–∞–∂–∏—Å—Ç —Å–¥–µ–ª–∞–ª–∞ –º–∞–Ω–∏–∫—é—Ä –∏ —Ä–µ—à–∏–ª–∞ –∑–∞–≥–ª—è–Ω—É—Ç—å –≤ –±–∞—Ä,\n'
          '—á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –Ω–µ –Ω—É–∂–Ω—ã –ª–∏ –∫–æ–º—É-–Ω–∏–±—É–¥—å –∫–ª–∏–µ–Ω—Ç—ã –¥–ª—è –º–∞—Å—Å–∞–∂–∞. –ù—É, –∏–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∫–ª–∏–µ–Ω—Ç –¥–ª—è –≤–µ—á–µ—Ä–Ω–µ–≥–æ\n'
          '–º–∞—Å—Å–∞–∂–∞ '
          '–ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã. –ò —Ç–æ–≥–¥–∞ —É—Ç–∫–∞ —Å —É–ª—ã–±–∫–æ–π –Ω–∞ –ª–∏—Ü–µ –≤–∑—è–ª–∞ –∫–æ–∫—Ç–µ–π–ª—å. –¢–∞–∫ –∫–∞–∫ —É —É—Ç–∫–∏-–±–∞—Ä–º–µ–Ω–∞ –Ω–µ –±—ã–ª–æ –∑–æ–Ω—Ç–∞,\n'
          '—Ç–æ –æ–Ω–∞ —Ä–µ—à–∏–ª–∞ '
          '–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–∏ –∫—Ä—ã–ª—å—è, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –æ–¥–∏–Ω –∫–æ–∫—Ç–µ–π–ª—å –≤–º–µ—Å—Ç–æ –∑–æ–Ω—Ç–∏–∫–∞. –û–Ω–∞ –ø–æ—à–ª–∞ –≤ –±–∞—Ä –∏ —Å–ø—Ä–æ—Å–∏–ª–∞: ¬´–£ –≤–∞—Å\n'
          '–Ω–µ—Ç '
          '–∑–æ–Ω—Ç–∏–∫–∞?¬ª. ¬´–ù–µ—Ç!¬ª - —Å–∫–∞–∑–∞–ª–∏ –≤—Å–µ, –∫—Ç–æ —Å–∏–¥–µ–ª –≤ –±–∞—Ä–µ.')

    print('–í–æ–∑—Ä–∞–∑–∏—Ç—å —É—Ç–∫–µ –Ω–∞ –∏—Ö —Å–æ–≤–º–µ—Å—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç?')
    options = {'–¥–∞': True, '–Ω–µ—Ç': False}

    option = get_check_option(options)
    if options[option]:
        print('–ß—Ç–æ –≤—ã –≤—Å–µ –∫—Ä–∏—á–∏—Ç–µ? –Ø –∂–µ –ø—Ä–æ—Å—Ç–æ —Ö–æ—Ç–µ–ª–∞ –Ω–∞–º–æ–∫–Ω—É—Ç—å... - —Å–∫–∞–∑–∞–ª–∞ —É—Ç–∫–∞ –∏ —É–ª–µ—Ç–µ–ª–∞. '
              '–ù–∞ —É–ª–∏—Ü–µ —Å—Ç–æ—è–ª–∞ —è—Å–Ω–∞—è –º–æ—Ä–æ–∑–Ω–∞—è –ø–æ–≥–æ–¥–∞ —è–Ω–≤–∞—Ä—è.')
    else:
        print('–£—Ç–∫–∞ —É—à–ª–∞ –±–µ–∑ –∑–æ–Ω—Ç–∞, –Ω–µ —Å–∫–∞–∑–∞–≤ –Ω–∏ —Å–ª–æ–≤–∞, —Ö–æ—Ç—è –æ–Ω –µ–π –∏ –Ω–µ –±—ã–ª –Ω—É–∂–µ–Ω.')
    print('To be continued')


def step2_no_umbrella():
    print('–û—Ç—Å—Ç–∞–≤–∏—Ç—å –∑–æ–Ω—Ç–∏–∫!\n'
          '–í –±–∞—Ä –ø—Ä–∏—à—ë–ª –º–æ—Ä—è–∫ —Å –±–æ–ª—å—à–∏–º —á–µ–º–æ–¥–∞–Ω–æ–º.\n'
          '–û–Ω —Ö–æ—Ç–µ–ª —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ –æ–Ω –∫—É–ø–∏–ª —Å–≤–æ–π –¥–æ–º, –Ω–æ –±—ã–ª–æ —É–∂–µ –ø–æ–∑–¥–Ω–æ.\n'
          '–ú–æ—Ä—è–∫–∞ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ —Å–µ—Å—Ç—å, –∏ —Ç—É—Ç –æ–Ω –≤—Å–ø–æ–º–Ω–∏–ª: —É –Ω–µ–≥–æ –Ω–µ—Ç —Å —Å–æ–±–æ–π –ø–∞—Å–ø–æ—Ä—Ç–∞.\n')

    print('–£–∑–Ω–∞—Ç—å –æ—Ç–∫—É–¥–∞ –≤–∑—è–ª—Å—è –º–æ—Ä—è–∫?')
    options = {'–¥–∞': True, '–Ω–µ—Ç': False}

    option = get_check_option(options)
    if options[option]:
        print('–û–Ω –ø—Ä–∏–ø–ª—ã–ª.')
    else:
        print('–õ–∞–¥–Ω–æ.')
    print('To be continued')


def step1():
    print(
        '–£—Ç–∫–∞-–º–∞–ª—è—Ä ü¶Ü —Ä–µ—à–∏–ª–∞ –≤—ã–ø–∏—Ç—å –∑–∞–π—Ç–∏ –≤ –±–∞—Ä. '
        '–í–∑—è—Ç—å –µ–π –∑–æ–Ω—Ç–∏–∫? ‚òÇÔ∏è'
    )
    options = {'–¥–∞': True, '–Ω–µ—Ç': False}

    option = get_check_option(options)

    if options[option]:
        return step2_umbrella()
    return step2_no_umbrella()


if __name__ == '__main__':
    """
    Balaboba generated text
    """
    step1()
